
[{"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\index.js":"1","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\App.js":"2","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\reportWebVitals.js":"3","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\ColorSelector\\index.js":"4","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\CustomizePage\\index.js":"5","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Login\\index.js":"6","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\BackgroundImage\\index.js":"7","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Modal\\index.js":"8","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Loading\\index.js":"9","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Test\\index.js":"10","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\PenDraw\\index.js":"11","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Pendraw\\index.js":"12"},{"size":517,"mtime":1611592668927,"results":"13","hashOfConfig":"14"},{"size":1973,"mtime":1611667305016,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1611592668927,"results":"16","hashOfConfig":"14"},{"size":959,"mtime":1611592668922,"results":"17","hashOfConfig":"14"},{"size":3565,"mtime":1611662813598,"results":"18","hashOfConfig":"14"},{"size":4116,"mtime":1611663604440,"results":"19","hashOfConfig":"14"},{"size":4942,"mtime":1611667286641,"results":"20","hashOfConfig":"14"},{"size":439,"mtime":1611592668925,"results":"21","hashOfConfig":"14"},{"size":354,"mtime":1611592668924,"results":"22","hashOfConfig":"14"},{"size":6151,"mtime":1611593092853,"results":"23","hashOfConfig":"14"},{"size":5410,"mtime":1611662764952,"results":"24","hashOfConfig":"14"},{"size":5410,"mtime":1611662764952,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jfcrxc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\index.js",[],["61","62"],"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\App.js",["63","64"],"//import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport ColorSelector from './components/ColorSelector';\r\nimport CustomizePage from './components/CustomizePage';\r\nimport Login from './components/Login';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport BackgroundImage from './components/BackgroundImage';\r\nimport Test from './components/Test'\r\nimport Pendraw from './components/Pendraw'\r\n\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      logged:false,\r\n      onLogin:this.onLogin,\r\n      onLogout: this.onLogout\r\n    }\r\n  }\r\n  onLogin = ()=> {\r\n    this.setState({\r\n      logged:true\r\n    });\r\n\r\n   \r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState({\r\n      logged:false\r\n    });\r\n    const provider = window.sessionStorage.getItem('provider');   \r\n    if(provider === 'kakao'){\r\n      window.Kakao.Auth.logout(function() {\r\n        console.log(\"Kakao logout\");\r\n      });\r\n    }\r\n    //SessionStorage Clear\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    const id = window.sessionStorage.getItem('id');\r\n    if(id) {\r\n      this.onLogin();\r\n    }\r\n    else {\r\n      this.onLogout();\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { logged, onLogout} = this.state;\r\n\r\n    return(\r\n      <BrowserRouter>\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login}/>\r\n        <Route path=\"/customize/\" component={CustomizePage}/>\r\n        <Route path=\"/backgroundimage\" component={BackgroundImage}/>\r\n        <Route path=\"/customize/:myColor\" component={CustomizePage}/>\r\n        <Route path=\"/colorselector\" component={ColorSelector}/>\r\n        <Route path=\"/test\" component={Test}/>\r\n        <Route path=\"/pendraw\" component={Pendraw}/>\r\n        {/* <Route path=\"/login/\" component={Login}/> */}\r\n        \r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\reportWebVitals.js",[],"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\ColorSelector\\index.js",["65","66","67"],"import React, { useState, useEffect} from 'react';\r\nimport ColorSelector from 'react-color-selector';\r\nimport Draggable from 'react-draggable';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nconst ColorPick = ({match}) => {\r\n \r\n\r\n    let [myColor, pickedColor] = useState('');\r\n\r\n    let picker_data = {\r\n        col: 12,\r\n        row: 12,\r\n        width: 300,\r\n        height: 250,\r\n        view: 'both',\r\n        theme: 'white',\r\n        title: 'COLORS',\r\n        cellControl: 4\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <h2>Choose Your Color</h2>\r\n            <ColorSelector pallet={picker_data} selectedColor={pickedColor} />\r\n            <p>{myColor}</p>\r\n            <Link to={`/customize/${myColor}`}>\r\n                <button >Go to Next Page</button>\r\n            </Link>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ColorPick;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\CustomizePage\\index.js",["68","69","70","71","72","73"],"import React, { Component, useState, useEffect } from 'react';\r\nimport BackgroundImage from '../BackgroundImage';\r\nimport Draggable from 'react-draggable';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { useScreenshot } from \"use-screenshot-hook\";\r\nimport Modal from '../Modal';\r\nimport Loading from '../Loading';\r\nimport Test from '../Test'\r\nimport Pendraw from '../Pendraw';\r\n\r\nconst CustomizePage = ({location}) => {\r\n\r\n  const [colorInfo, setColorInfo] = useState({});\r\n  useEffect(()=>{\r\n      console.log('axios get !');\r\n      let umounted = false;\r\n      axios.get(\"http://192.249.18.241:4000/testcrawling/all\", {\r\n        params: {\r\n          myColor: location.hash\r\n        }\r\n        }).then(\r\n        (res)=>{\r\n          setColorInfo(res.data);\r\n          console.log(colorInfo);\r\n        }\r\n    )\r\n    .catch(error =>{\r\n      console.log(error)\r\n    })\r\n    return ()=>{umounted= true}\r\n  },[])\r\n\r\n  console.log(location.hash);\r\n  \r\n  // const [inputText, setInputText] = useState('');\r\n  //   const onChangeInput = e => {\r\n  //   setInputText(e.target.value);\r\n  // };\r\n\r\n  // const [inputText1, setInputText1] = useState('');\r\n  //   const onChangeInput1 = e => {\r\n  //   setInputText1(e.target.value);\r\n  // };\r\n\r\n  // const onReset = () => {\r\n  //   setInputText(\"\");\r\n  // };\r\n\r\n  const [userImage, setUserImage] = useState('');\r\n\r\n  const uploadHandler = (event) => {\r\n    const data = new FormData();\r\n    data.append('file', event.target.files[0]);\r\n    axios.post('http://192.249.18.241:4000/uploads', data)\r\n    .then(response=>{\r\n      console.log('get path from server: ' + response.data);\r\n      setUserImage(response.data);\r\n      })\r\n    .catch(error =>{\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n  let [myColor, pickedColor] = useState('');  \r\n  let picker_data = {\r\n      col: 12,\r\n      row: 12,\r\n      width: 300,\r\n      height: 250,\r\n      view: 'both',\r\n      theme: 'white',\r\n      title: 'COLORS',\r\n      cellControl: 4\r\n  }\r\n\r\n  var elements = [0,0,0,0,0,0], i=0;\r\n  elements[0] = location.hash;\r\n  for(i=0; i<colorInfo.length; i++) elements[i+1] = colorInfo[i];\r\n  \r\n  const { image, takeScreenshot } = useScreenshot();\r\n\r\n  const [modalState, setModalState] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const openModal = () => {\r\n    setModalState(true);\r\n  };\r\n  const closeModal = event => {\r\n    setModalState(false);\r\n  };\r\n  const showLoader = () => {\r\n    setLoading(true);\r\n  }\r\n  const closeLoader = () => {\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"c_page_title\">CustomizePage</h1>\r\n\r\n      <Modal isOpen={modalState}\r\n             open={openModal}\r\n             close={closeModal}\r\n             image={image}>\r\n      </Modal>\r\n      \r\n      <BackgroundImage className = \"behind_image\" colorInfo={elements}></BackgroundImage>\r\n      <Pendraw className=\"background_iamge\" ></Pendraw>\r\n   \r\n        <input type=\"file\" id=\"image-input\" onChange={uploadHandler}/>\r\n\r\n       \r\n        <Test></Test>\r\n\r\n        <Draggable>\r\n          <img src={'http://192.249.18.241:4000/' + userImage} alt=\"\"></img>\r\n        </Draggable>\r\n      \r\n      <Loading\r\n             isOpen={isLoading}\r\n             open={showLoader}\r\n             close={closeLoader}>\r\n      </Loading>\r\n      \r\n      <button className=\"screenShot-btn\"\r\n        onClick={() => {\r\n          takeScreenshot().then(showLoader()).then(setTimeout(() => {  openModal() }, 5000)).then(closeLoader)}}>\r\n        screenshot</button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizePage;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Login\\index.js",["74","75"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport KakaoLogin from 'react-kakao-login';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            url:'',\r\n            provider: '',\r\n            //token:'',\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n   \r\n    // Kakao Login\r\n    responseKakao = (res) => {\r\n        this.setState({\r\n            id: res.profile.id,\r\n            name: res.profile.properties.nickname,\r\n            // token: res.response.access_token,\r\n            url:'',\r\n            provider: 'kakao'\r\n        })\r\n        // if(res.response.access_token != null){\r\n        //     axios.get('http://192.249.18.222:4000/auth',\r\n        //         {\r\n        //         parmas: {\r\n        //             Authorization: res.response.access_token,\r\n        //           //받아오는 response객체의 access_token을 통해 유저 정보를 authorize한다.     \r\n        //         }\r\n        //     }\r\n        //     )\r\n        //     .then((res)=> {\r\n        //         console.log(res.response.access_token);\r\n        //         })\r\n        // }\r\n        \r\n       \r\n        // fetch(`${this.state.url}/auth`, {\r\n        //     //백엔드에서 원하는 형태의 endpoint로 입력해서 fetch한다. \r\n        //     method: 'GET',\r\n        //     headers: {\r\n        //       Authorization: res.response.access_token,\r\n        //       //받아오는 response객체의 access_token을 통해 유저 정보를 authorize한다. \r\n             \r\n        //     },\r\n        //   })\r\n        //     .then((res) => res.json())\r\n        //     .then((res) => localStorage.setItem('token', res.token), \r\n        //           //백엔드에서 요구하는 key 값(token)으로 저장해서 localStorage에 저장한다.\r\n        //           //여기서 중요한것은 처음에 console.log(res)해서 들어오는 \r\n        //           //access_token 값을 백엔드에 전달해줘서 백엔드에 저장 해두는 \r\n        //           //절차가 있으므로 까먹지 말 것!\r\n\r\n        //           alert('로그인 성공하였습니다'))\r\n        //           //alert(this.state.url)\r\n        //     // .then(axios({\r\n        //     //     method: 'post',\r\n        //     //     url: \"http://localhost:4000/auth/login\",\r\n        //     //     data: {\r\n        //     //       firstName: 'Fred',\r\n        //     //       lastName: 'Flintstone'\r\n        //     //     }\r\n        //     //   });\r\n  \r\n        this.doSignUp();\r\n    }\r\n\r\n    // Login Fail\r\n    responseFail = (err) => {\r\n        console.error(err);\r\n        alert(\"login fail\");\r\n    }\r\n\r\n    doSignUp = () => {\r\n        const { id, name, provider } = this.state;\r\n\r\n        window.sessionStorage.setItem('id', id);\r\n        window.sessionStorage.setItem('name', name);\r\n        window.sessionStorage.setItem('provider', provider);\r\n        //this.props.onLogin();\r\n        this.props.history.push('/colorselector');\r\n        alert('로그인성공')\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            <Container>\r\n              \r\n                <KakaoButton\r\n                    jsKey={'977fac8044cec0f3b8c41ec3e3ac3ce6'}\r\n                    buttonText=\"Kakao\"\r\n                    onSuccess={this.responseKakao}\r\n                    onFailure={this.responseFail}\r\n                    getProfile={true}\r\n                    \r\n                />\r\n                \r\n            </Container>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n`\r\n\r\nconst KakaoButton = styled(KakaoLogin)`\r\n    padding: 0;\r\n    width: 190px;\r\n    height: 44px;\r\n    line-height: 44px;\r\n    color: #783c00;\r\n    background-color: #FFEB00;\r\n    border: 1px solid transparent;\r\n    border-radius: 3px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n`\r\n\r\nexport default Login;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\BackgroundImage\\index.js",["76"],"import React, { Component } from 'react';\r\nimport './style.css';\r\nimport path from './mtm.png';\r\nimport Pendraw from \"../Pendraw\";\r\n\r\nclass BackgroundImage extends Component {\r\n\r\n    componentDidMount() {\r\n         // Reference the color shape that was drawn over the image\r\n\r\n         const overlay = document.getElementById(\"product-shape\");\r\n         overlay.style.fill = this.props.colorInfo[0];\r\n         \r\n\r\n         // Click on a color\r\n         var el = document.getElementsByClassName(\"color\");\r\n         for (var i = 0; i < el.length; i++) {\r\n             el[i].onclick = changeColor;\r\n         }\r\n \r\n         function changeColor(e) {\r\n             // get the hex color\r\n             let hex = e.target.getAttribute(\"data-hex\");\r\n             // set the hex color\r\n             overlay.style.fill = hex;\r\n             \r\n         }\r\n \r\n    }\r\n\r\n    render () {\r\n\r\n    return (\r\n        <div className=\"customize\" >\r\n            <div className=\"container\">\r\n            <img className=\"background-image\"  src={path} alt=\"\"></img>\r\n            \r\n            <svg className=\"product-svg\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 255 255\">\r\n                <defs/>\r\n                <path id=\"product-shape\" d=\"M98.62,6.54c1.36,0,4.86-.21,5.63-.17a55.85,55.85,0,0,1,5.87,1.1s3.66.74,7.74,1.22a77.88,77.88,0,0,0,9.68.52,109.29,109.29,0,0,0,11.93-.64c6.71-.72,9.92-1.56,12.13-1.94,1.12-.19,2.44-.7,5.1-1.16a2.37,2.37,0,0,1,.9,0,3.29,3.29,0,0,1,1.61,1c.61.58.65.78,1.17,1.29a3.18,3.18,0,0,0,1.42,1.1C164.53,10,169,12.05,169,12.05c4.1,1.38,8.17,3.32,12.26,5,8.11,3.27,8.75,3.61,9.61,4.13a37.74,37.74,0,0,1,8.64,7.29,40.44,40.44,0,0,1,5.23,7.61,14.1,14.1,0,0,0,.9,1.81c.87,1.42,3.65,13.09,5.49,20,1.58,5.94,1.07,3.88,3.8,16.51,1.25,5.76,1.53,7.44,3.23,15.81,1.1,5.41,2.3,11.11,4.71,22.52,3.24,15.35,3.55,16.65,4.71,22.19,1.86,8.91,5.23,25.23,7.74,40.19,4.57,27.26,4.82,30.63,5.36,36.78.32,3.7,1,9.93,1.16,13.2a5,5,0,0,1-.27,2.28,5.64,5.64,0,0,0-.67.79,2.63,2.63,0,0,0-.08.93c0,1-.09,2.18-.08,5.06,0,0,.56,10.38.62,12.77a1.72,1.72,0,0,1-.06.74c0,.09-.22.2-.42.41s-.73.17-.84.17c-3.35,0-7.29,0-10.82.18-5.93.22-7.85.42-8,.45,0,0-3.33.1-3.49,0a1.51,1.51,0,0,1-.38-.34c-.22-.21-.26-.26-.54-.51a1.65,1.65,0,0,1-.61-1.07c0-.21-.43-4.18-.6-5.51s-.36-2.48-.9-5a16,16,0,0,0-1.88-5.25,10.71,10.71,0,0,0-1-1.39,9.93,9.93,0,0,1-1.88-2.24c-.94-.83-2.28-5-2.77-6.12-.28-.66-2.59-6.89-4.86-13.21-1.56-4.31-2.61-6.25-4.26-11.33-.65-2-1.19-1.85-1.19-1.85-.17,5.21-.17,8.21-.13,11.13-.1,4.71.33,10.48.3,11,0,0,0,3.31,0,8.49,0,.57-.45.88-.57,1.06a5.44,5.44,0,0,0-.76,1.27c-.17.71-.1.79-.43,2.23-.54,2.34-1.43,6-2.11,10,0,0-.94,5.34-1.5,6.24a3.49,3.49,0,0,1-.75.85c-.35.31-.62.24-1.23.28s-1,.28-1.32.29c-6.18.26-19.8-.52-19.8-.52-4.34,0-10.35-.67-28.16-.52-12.78.11-20.06,0-30.29.11-7.68,0-23.61.94-34.39,1,0,0-2.36.06-6.24-.19-.14,0-.32-.27-.55-.52s-.82-.78-1.51-1.46c-.87-.87-1.45-1.4-1.53-1.77-.26-1.33-.48-2.78-1-5-.91-4.23-.94-4.37-1.7-7.72-.28-1.21-.54-3.31-.7-3.56s-.62-.83-1-1.46a3.07,3.07,0,0,1-.22-1.53c-.09-4.81.14-9.21.23-13.75,0-.19-.05-.9.13-9.82,0-1.36,0-8.05,0-8.15-1.67,4.18-2.86,7.62-3.74,10-4.59,12.25-5,13.08-5.75,15.72a70.53,70.53,0,0,1-3.22,7.76,6.7,6.7,0,0,1-1.2,1.7,14.57,14.57,0,0,0-1.7,1.89,7.32,7.32,0,0,0-.83,1.28,21.51,21.51,0,0,0-1.51,4.68c-.93,4.77-1.31,7.37-1.51,9a10.09,10.09,0,0,1-.44,2.48,3,3,0,0,1-.61.78,1.31,1.31,0,0,1-.66.45c-.69.21-9.43-.46-14-.51l-8.18-.1c-.75,0-.8-.1-1.07-.37s-.32-.59-.29-1.59c.06-2.24.25-4.48.52-6.7.55-4.47-.38-5.37.05-8.26a8,8,0,0,0-.21-3.12,4.85,4.85,0,0,0-.41-.94c-.21-.33-.36-.46-.47-.62a2.38,2.38,0,0,1,0-2c.42-1.15-.57-1.85,1.56-18,.69-5.23,1.41-9.55,2.81-18,1.46-8.8,1.64-9.41,2.85-16.83,1.74-10.65,1.48-10.15,2.45-15.59,1.2-6.79,1.82-8.83,4.67-21.77,1.06-4.8,2.09-9.7,4.16-19.49.5-2.39,2.54-12,5.35-25.72,3.29-16,4.93-24,5-24.31C46.54,58.92,52,38.47,53.1,36.35a37.26,37.26,0,0,1,5.1-7.23,42.82,42.82,0,0,1,8.1-7.22c2.45-1.66,12-5.5,14.39-6.55,1.84-.81,8.44-3.56,11.33-4.95a43,43,0,0,0,4.42-2C96.9,8.15,97.9,6.43,98.62,6.54Z\"/>\r\n            </svg>\r\n            </div>\r\n\r\n            <div className=\"colors\">\r\n                <div className=\"color\" style={{background: this.props.colorInfo[0]}} data-hex={this.props.colorInfo[0]}></div>\r\n                <div className=\"color\" style={{background: this.props.colorInfo[1]}} data-hex={this.props.colorInfo[1]}></div>\r\n                <div className=\"color\" style={{background: this.props.colorInfo[2]}} data-hex={this.props.colorInfo[2]}></div>\r\n                <div className=\"color\" style={{background: this.props.colorInfo[3]}} data-hex={this.props.colorInfo[3]}></div>\r\n                <div className=\"color\" style={{background: this.props.colorInfo[4]}} data-hex={this.props.colorInfo[4]}></div>\r\n                <div className=\"color\" style={{background: this.props.colorInfo[5]}} data-hex={this.props.colorInfo[5]}></div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n}\r\n    \r\nexport default BackgroundImage;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Modal\\index.js",["77"],"import React from 'react';\r\nimport './style.css';\r\nimport { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n  render() {\r\n    return (\r\n          this.props.isOpen === true ?\r\n          <div className=\"modal\">\r\n            <img className=\"modal_image\" src={this.props.image}/>\r\n            <button onClick={this.props.close}>close</button>\r\n          </div>\r\n          :\r\n          null\r\n    );\r\n  }\r\n}\r\nexport default Modal;","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Loading\\index.js",["78"],"import React from 'react';\r\nimport './style.css';\r\nimport { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n          this.props.isOpen === true ?\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" />\r\n          :\r\n          null\r\n    );\r\n  }\r\n}\r\nexport default Loading;",["79","80"],"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Test\\index.js",["81"],"import Draggable from 'react-draggable';\r\nimport React from \"react\"\r\nimport { ChromePicker } from 'react-color'\r\nimport reactCSS from 'reactcss'\r\nimport { SketchPicker } from 'react-color'\r\n\r\nclass Test extends React.Component {\r\n  state = {\r\n    cats: [{name:\"\", age:\"\", hex:\"\"}],\r\n    displayColorPicker:false,\r\n  }\r\n\r\n  \r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange1 = (color) => {\r\n    this.setState({ hex: color.hex })\r\n  };\r\n\r\nhandleChange = (e) => {\r\n    if ([\"name\", \"age\",\"hex\"].includes(e.target.className) ) {\r\n      let cats = [...this.state.cats]\r\n      cats[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase()\r\n      this.setState({ cats }, () => console.log(this.state.cats))\r\n      \r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value.toUpperCase() })\r\n    }\r\n  }\r\n\r\naddCat = (e) => {\r\n    this.setState((prevState) => ({\r\n      cats: [...prevState.cats, {name:\"\", age:\"\", hex:\"\"}],\r\n    }));\r\n  }\r\n  \r\nhandleSubmit = (e) => { e.preventDefault() }\r\n\r\n\r\n\r\n\r\nrender() {\r\n    let {cats} = this.state\r\n    const styles = reactCSS({\r\n        'default': {\r\n          color: {\r\n            width: '36px',\r\n            height: '14px',\r\n            borderRadius: '2px',\r\n            background: `${this.state.hex}`\r\n            \r\n          },\r\n          swatch: {\r\n            padding: '5px',\r\n            background: '#fff',\r\n            borderRadius: '1px',\r\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n            display: 'inline-block',\r\n            cursor: 'pointer',\r\n          },\r\n          popover: {\r\n            position: 'absolute',\r\n            zIndex: '2',\r\n          },\r\n          cover: {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n          },\r\n        },\r\n      });\r\n  \r\n\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} onChange={this.handleChange} >\r\n        \r\n        \r\n        <button onClick={this.addCat}>Text Add</button>\r\n        {\r\n          cats.map((val, idx)=> {\r\n            let catId = `cat-${idx}`, ageId = `age-${idx}`, hexId = `hex-${idx}`\r\n            return (\r\n              <div key={idx}>\r\n                <label htmlFor={catId}>{`Text1 #${idx + 1}`}</label>\r\n                \r\n                <input\r\n                  type=\"text\"\r\n                  name={catId}\r\n                  data-id={idx}\r\n                  id={catId}\r\n                  value={cats[idx].name} \r\n                  className=\"name\"\r\n                />\r\n                <label htmlFor={ageId}>Text Size</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name={ageId}\r\n                  data-id={idx}\r\n                  id={ageId}\r\n                  value={cats[idx].age} \r\n                  className=\"age\"\r\n                />\r\n                \r\n                <div>\r\n                    <div style={ styles.swatch } onClick={ this.handleClick } >\r\n                    <div style={ styles.color } />\r\n                    </div>\r\n                    { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n                    <div style={ styles.cover } onClick={ this.handleClose }/>\r\n                    <SketchPicker color={ cats[idx].hex } onChange={ this.handleChange1 }\r\n                     \r\n                     name={hexId}\r\n                     data-id={idx}\r\n                     id={hexId}\r\n                     value={cats[idx].hex} \r\n                     className=\"hex\"  />\r\n                    </div> : null }\r\n\r\n                </div>\r\n                \r\n                <Draggable>\r\n                    <h1 style={{color: `${this.state.hex}`, fontSize:Number(`${cats[idx].age}`)}}\r\n                        \r\n                    >{cats[idx].name}</h1>\r\n                </Draggable>\r\n                \r\n              </div>\r\n            )\r\n          })\r\n        }\r\n       \r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default Test\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import reactCSS from 'reactcss'\r\n// import { SketchPicker } from 'react-color'\r\n\r\n// class Test extends React.Component {\r\n//   state = {\r\n//     displayColorPicker: false,\r\n//     color: {\r\n//       r: '241',\r\n//       g: '112',\r\n//       b: '19',\r\n//       a: '1',\r\n//     },\r\n//   };\r\n\r\n//   handleClick = () => {\r\n//     this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n//   };\r\n\r\n//   handleClose = () => {\r\n//     this.setState({ displayColorPicker: false })\r\n//   };\r\n\r\n//   handleChange = (color) => {\r\n//     this.setState({ color: color.rgb })\r\n//   };\r\n\r\n//   render() {\r\n\r\n    // const styles = reactCSS({\r\n    //   'default': {\r\n    //     color: {\r\n    //       width: '36px',\r\n    //       height: '14px',\r\n    //       borderRadius: '2px',\r\n    //       background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`,\r\n    //     },\r\n    //     swatch: {\r\n    //       padding: '5px',\r\n    //       background: '#fff',\r\n    //       borderRadius: '1px',\r\n    //       boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n    //       display: 'inline-block',\r\n    //       cursor: 'pointer',\r\n    //     },\r\n    //     popover: {\r\n    //       position: 'absolute',\r\n    //       zIndex: '2',\r\n    //     },\r\n    //     cover: {\r\n    //       position: 'fixed',\r\n    //       top: '0px',\r\n    //       right: '0px',\r\n    //       bottom: '0px',\r\n    //       left: '0px',\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n//     return (\r\n    //   <div>\r\n    //     <div style={ styles.swatch } onClick={ this.handleClick }>\r\n    //       <div style={ styles.color } />\r\n    //     </div>\r\n    //     { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n    //       <div style={ styles.cover } onClick={ this.handleClose }/>\r\n    //       <SketchPicker color={ this.state.color } onChange={ this.handleChange } />\r\n    //     </div> : null }\r\n\r\n    //   </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Test","C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\PenDraw\\index.js",["82","83","84","85","86","87","88","89","90"],"C:\\Users\\q\\Desktop\\madcampWeek4\\src\\components\\Pendraw\\index.js",["91","92","93","94","95","96","97","98","99"],"import React, { Component } from 'react'\r\n\r\n\r\nconst styles = {\r\n    canvas : {\r\n        \r\n        border:'1px solid #333',\r\n        margin:'20px 0px',\r\n        zIndex:1\r\n    },\r\n\r\n    maindiv : {\r\n        padding:'10px',\r\n        margin:'auto',\r\n        width:'800px',\r\n    \r\n    },\r\n\r\n    button : {\r\n        border:'0px',\r\n        margin:'1px',\r\n        height:'50px',\r\n        minWidth:'75px'\r\n    },\r\n\r\n    colorSwatches : {        \r\n        red : {'backgroundColor' : 'red'},    \r\n        orange : {'backgroundColor' : 'orange'},\r\n        yellow : {'backgroundColor' : 'yellow'},\r\n        green : {'backgroundColor' : 'green'},\r\n        blue : {'backgroundColor' : 'blue'},\r\n        purple : {'backgroundColor' : 'purple'},\r\n        black : {'backgroundColor' : 'black'}\r\n    }\r\n}\r\n\r\n//simple draw component made in react\r\nclass Pendraw extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reset()\r\n    }\r\n\r\n    draw(e) { //response to Draw button click \r\n        this.setState({\r\n            mode:'draw'\r\n        })\r\n    }\r\n\r\n    erase() { //response to Erase button click\r\n        this.setState({\r\n            mode:'erase'\r\n        })\r\n    }\r\n\r\n    drawing(e) { //if the pen is down in the canvas, draw/erase\r\n\r\n        if(this.state.pen === 'down') {\r\n\r\n            this.ctx.beginPath()\r\n            this.ctx.lineWidth = this.state.lineWidth\r\n            this.ctx.lineCap = 'round';\r\n\r\n\r\n            if(this.state.mode === 'draw') {\r\n                this.ctx.strokeStyle = this.state.penColor\r\n            }\r\n\r\n            if(this.state.mode === 'erase') {\r\n                this.ctx.strokeStyle = '#ffffff'\r\n            }\r\n\r\n            this.ctx.moveTo(this.state.penCoords[0], this.state.penCoords[1]) //move to old position\r\n            this.ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY) //draw to new position\r\n            this.ctx.stroke();\r\n\r\n            this.setState({ //save new position \r\n                penCoords:[e.nativeEvent.offsetX, e.nativeEvent.offsetY]\r\n            })\r\n        }\r\n    }\r\n\r\n    penDown(e) { //mouse is down on the canvas\r\n        this.setState({\r\n            pen:'down',\r\n            penCoords:[e.nativeEvent.offsetX, e.nativeEvent.offsetY]\r\n        })\r\n    }\r\n\r\n    penUp() { //mouse is up on the canvas\r\n        this.setState({\r\n            pen:'up'\r\n        })\r\n    }\r\n\r\n    penSizeUp(){ //increase pen size button clicked\r\n        this.setState({\r\n            lineWidth: this.state.lineWidth += 5\r\n        })\r\n    }\r\n\r\n    penSizeDown() {//decrease pen size button clicked\r\n        this.setState({\r\n            lineWidth: this.state.lineWidth -= 5\r\n        })\r\n    }\r\n\r\n    setColor(c){ //a color button was clicked\r\n        this.setState({\r\n            penColor : c\r\n        })\r\n    }\r\n\r\n    reset() { //clears it to all white, resets state to original\r\n        this.setState({\r\n            mode: 'draw',\r\n            pen : 'up',\r\n            lineWidth : 10,\r\n            penColor : 'black'\r\n        })\r\n\r\n        this.ctx = this.refs.canvas.getContext('2d')\r\n        this.ctx.fillStyle=\"white\"\r\n        this.ctx.fillRect(0,0,800,600)\r\n        this.ctx.lineWidth = 10\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.maindiv}>\r\n               \r\n                <canvas ref=\"canvas\" width=\"800px\" height=\"600px\" style={styles.canvas} \r\n                    onMouseMove={(e)=>this.drawing(e)} \r\n                    onMouseDown={(e)=>this.penDown(e)} \r\n                    onMouseUp={(e)=>this.penUp(e)}>\r\n                </canvas>\r\n                <div>\r\n                    <button onClick={(e)=>this.draw(e)} style={styles.btn, styles.button}>Draw</button>\r\n                    <button onClick={(e)=>this.erase(e)} style={styles.btn, styles.button}>Erase</button>\r\n                    <button onClick={(e)=>this.penSizeUp()} style={styles.btn, styles.button}>Pen Size +</button>\r\n                    <button onClick={(e)=>this.penSizeDown()} style={styles.btn, styles.button}>Pen Size -</button>\r\n                    <button onClick={()=>this.reset()} style={styles.btn, styles.button}>Reset</button>\r\n                </div>\r\n                <div>\r\n                    <button style={Object.assign({}, styles.colorSwatches.red, styles.button)} onClick={()=>this.setColor('red')}>Red</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.orange, styles.button)} onClick={()=>this.setColor('orange')}>Orange</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.yellow, styles.button)} onClick={()=>this.setColor('yellow')}>Yellow</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.green, styles.button)} onClick={()=>this.setColor('green')}>Green</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.blue, styles.button)} onClick={()=>this.setColor('blue')}>Blue</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.purple, styles.button)} onClick={()=>this.setColor('purple')}>Purple</button>\r\n                    <button style={Object.assign({}, styles.colorSwatches.black, styles.button)} onClick={()=>this.setColor('black')}>Black</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//ReactDOM.render(<DrawApp />, document.getElementById('da'))\r\n\r\nexport default Pendraw;",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":57,"column":13,"nodeType":"106","messageId":"107","endLine":57,"endColumn":19},{"ruleId":"104","severity":1,"message":"108","line":57,"column":21,"nodeType":"106","messageId":"107","endLine":57,"endColumn":29},{"ruleId":"104","severity":1,"message":"109","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"110","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":17},{"ruleId":"104","severity":1,"message":"111","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":13},{"ruleId":"104","severity":1,"message":"112","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"113","line":31,"column":17,"nodeType":"106","messageId":"107","endLine":31,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":32,"column":5,"nodeType":"116","endLine":32,"endColumn":7,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":65,"column":8,"nodeType":"106","messageId":"107","endLine":65,"endColumn":15},{"ruleId":"104","severity":1,"message":"119","line":65,"column":17,"nodeType":"106","messageId":"107","endLine":65,"endColumn":28},{"ruleId":"104","severity":1,"message":"120","line":66,"column":7,"nodeType":"106","messageId":"107","endLine":66,"endColumn":18},{"ruleId":"104","severity":1,"message":"111","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"121","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"122","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":10,"column":13,"nodeType":"125","endLine":10,"endColumn":66},{"ruleId":"123","severity":1,"message":"124","line":9,"column":11,"nodeType":"125","endLine":9,"endColumn":93},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","replacedBy":"127"},{"ruleId":"104","severity":1,"message":"128","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"104","severity":1,"message":"112","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":37,"column":5,"nodeType":"131","messageId":"132","endLine":39,"endColumn":6},{"ruleId":"133","severity":1,"message":"134","line":99,"column":24,"nodeType":"135","endLine":99,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":105,"column":24,"nodeType":"135","endLine":105,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":139,"column":74,"nodeType":"138","messageId":"139","endLine":139,"endColumn":75},{"ruleId":"136","severity":1,"message":"137","line":140,"column":75,"nodeType":"138","messageId":"139","endLine":140,"endColumn":76},{"ruleId":"136","severity":1,"message":"137","line":141,"column":78,"nodeType":"138","messageId":"139","endLine":141,"endColumn":79},{"ruleId":"136","severity":1,"message":"137","line":142,"column":80,"nodeType":"138","messageId":"139","endLine":142,"endColumn":81},{"ruleId":"136","severity":1,"message":"137","line":143,"column":73,"nodeType":"138","messageId":"139","endLine":143,"endColumn":74},{"ruleId":"104","severity":1,"message":"112","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":40,"column":5,"nodeType":"131","messageId":"132","endLine":42,"endColumn":6},{"ruleId":"133","severity":1,"message":"134","line":102,"column":24,"nodeType":"135","endLine":102,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":108,"column":24,"nodeType":"135","endLine":108,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":142,"column":74,"nodeType":"138","messageId":"139","endLine":142,"endColumn":75},{"ruleId":"136","severity":1,"message":"137","line":143,"column":75,"nodeType":"138","messageId":"139","endLine":143,"endColumn":76},{"ruleId":"136","severity":1,"message":"137","line":144,"column":78,"nodeType":"138","messageId":"139","endLine":144,"endColumn":79},{"ruleId":"136","severity":1,"message":"137","line":145,"column":80,"nodeType":"138","messageId":"139","endLine":145,"endColumn":81},{"ruleId":"136","severity":1,"message":"137","line":146,"column":73,"nodeType":"138","messageId":"139","endLine":146,"endColumn":74},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'logged' is assigned a value but never used.","Identifier","unusedVar","'onLogout' is assigned a value but never used.","'useEffect' is defined but never used.","'Draggable' is defined but never used.","'axios' is defined but never used.","'Component' is defined but never used.","'umounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colorInfo' and 'location.hash'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'myColor' is assigned a value but never used.","'pickedColor' is assigned a value but never used.","'picker_data' is assigned a value but never used.","'Link' is defined but never used.","'Pendraw' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["140"],["141"],"'ChromePicker' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [colorInfo, location.hash]",{"range":"145","text":"146"},[917,919],"[colorInfo, location.hash]"]

